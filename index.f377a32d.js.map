{"mappings":"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","sources":["src/index.js","src/js/searchByKeyWord.js","src/js/loader.js","src/js/pagination.js","src/js/renderingGalleryMarkup.js"],"sourcesContent":["import './js/refs';\nimport './js/searchByKeyWord';\nimport './js/trailer';\nimport './js/modal-movie';\nimport './js/markupModal';\nimport './js/apiService';\nimport './js/renderingGalleryMarkup';\nimport './js/team-modal';\nimport './js/modal-btns-library';","import { headerForm, errorText, guard, buttonTop } from './refs';\nimport apiservice from './apiService';\nimport { renderMarkupSearch } from './markupSearch';\nimport { cleanHtml } from './markupSearch';\nimport { hideLoader, showLoader } from './loader';\nimport pagination from './pagination';\nimport { movieContainer, sadEror, paginationDiv } from './refs';\nimport { getMovies } from './renderingGalleryMarkup';\nimport { observer } from './buttonTop';\n\nheaderForm.addEventListener('submit', onHeaderFormClick);\n\nexport async function onHeaderFormClick(evt) {\n  try {\n    evt.preventDefault();\n    apiservice.query = evt.currentTarget.keyword.value;\n    const keyWord = evt.currentTarget.keyword.value;\n    // console.log('keyWord: ', keyWord);\n    localStorage.setItem('keyWord', keyWord);\n    cleanHtml();\n    paginationDiv.classList.add('visually-hidden');\n    apiservice.page = 1;\n\n    if (!apiservice.query.trim()) {\n      buttonTop.style.display = 'none';\n      errorText.classList.remove('header__error_hidden');\n      // sadEror.classList.remove('header__error_hidden');\n      document.body.classList.add('sad__smile');\n      paginationDiv.classList.add('visually-hidden');\n      setTimeout(() => {\n        errorText.classList.add('header__error_hidden');\n        // sadEror.classList.add('header__error_hidden');\n        document.body.classList.remove('sad__smile');\n        paginationDiv.classList.remove('visually-hidden');\n\n        getMovies();\n      }, 2500);\n      headerForm.reset();\n      return;\n    }\n\n    showLoader();\n    const response = await apiservice.fetchFilmsByKeyWord();\n    const results = response.data.results;\n    headerForm.reset();\n    hideLoader();\n\n    if (results.length === 0) {\n      // paginationDiv.classList.add('visually-hidden');\n      buttonTop.style.display = 'none';\n      errorText.classList.remove('header__error_hidden');\n      // sadEror.classList.remove('header__error_hidden');\n      document.body.classList.add('sad__smile');\n\n      setTimeout(() => {\n        errorText.classList.add('header__error_hidden');\n        // sadEror.classList.add('header__error_hidden');\n        document.body.classList.remove('sad__smile');\n        paginationDiv.classList.remove('visually-hidden');\n\n        getMovies();\n      }, 2500);\n\n      headerForm.reset();\n    } else {\n      movieContainer.innerHTML = renderMarkupSearch(results);\n      paginationDiv.classList.remove('visually-hidden');\n      observer.observe(guard);\n\n      pagination(1, response.data.total_pages);\n      hideLoader();\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n","export const showLoader = () => {\n  const loader = document.querySelector('.loader');\n  if (loader) {\n    loader.classList.remove('hidden');\n  }\n};\n\nexport const hideLoader = () => {\n  const loader = document.querySelector('.loader');\n  if (loader) {\n    loader.classList.add('hidden');\n  }\n};\n","import apiservice from './apiService';\nimport { renderMarkupSearch } from './markupSearch';\nimport { getMovies } from './renderingGalleryMarkup';\nimport { movieContainer } from './refs';\n\nimport { onLibrPaginationClick } from './libraryMarkup';\n\nconst paginationList = document.querySelector('.pagination__list'); //\nconst paginationBox = document.querySelector('.pagination');\npaginationBox.addEventListener('click', clickFunction);\npaginationBox.removeEventListener('click', onLibrPaginationClick);\n\n// const apiService = new ApiService();\n\nlet currentPage;\n\nexport default async function pagination(currentP, totalPages) {\n  currentPage = currentP;\n\n  let murkup = '';\n\n  let beforeTwoPage = currentPage - 2;\n  let beforePage = currentPage - 1;\n  let afterPage = currentPage + 1;\n  let afterTwoPage = currentPage + 2;\n\n  if (currentPage > 1) {\n    murkup += `<li class=\"pagination__item pagination__item_arrows\">◄</li> `;\n    murkup += `<li class=\"pagination__item\">1</li>`;\n  }\n\n  if (currentPage > 4) {\n    murkup += `<li class=\"pagination__item three-drops\">...</li>`;\n  }\n\n  if (currentPage > 3) {\n    murkup += `<li class=\"pagination__item\">${beforeTwoPage}</li>`;\n  }\n\n  if (currentPage > 2) {\n    murkup += `<li class=\"pagination__item\">${beforePage}</li>`;\n  }\n\n  murkup += `<li class=\"pagination__item current\">${currentPage}</li>`;\n\n  if (totalPages - 1 > currentPage) {\n    murkup += `<li class=\"pagination__item\">${afterPage}</li>`;\n  }\n\n  if (totalPages - 2 > currentPage) {\n    murkup += `<li class=\"pagination__item\">${afterTwoPage}</li>`;\n  }\n\n  if (totalPages - 3 > currentPage) {\n    murkup += `<li class=\"pagination__item three-drops\">...</li>`;\n  }\n  if (totalPages > currentPage) {\n    murkup += `<li class=\"pagination__item\">${totalPages}</li>`;\n    murkup += `<li class=\"pagination__item pagination__item_arrows\">►</li>`;\n  }\n  paginationList.innerHTML = murkup;\n}\n\nasync function clickFunction(e) {\n  let response;\n\n  if (e.target.tagName !== 'LI') {\n    return;\n  }\n  if (e.target.textContent === '...') {\n    return;\n  }\n\n  const searchToSource = localStorage.getItem('searchSource'); // , 'byTrend'  byKeyWord\n\n  if (e.target.textContent === '►') {\n    apiservice.page = currentPage;\n    apiservice.increamentPage();\n\n    if (searchToSource === 'byTrend') {\n      response = await apiservice.fetchTrendFilms();\n    } else {\n      response = await apiservice.fetchFilmsByKeyWord();\n    }\n    const results = response.data.results;\n\n    movieContainer.innerHTML = renderMarkupSearch(results);\n    pagination(response.data.page, response.data.total_pages);\n    // window.scrollBy(0, -window.pageYOffset + 270);\n    window.scrollTo(0, 230);\n    // window.scrollBy(0, -1000);\n    return;\n  }\n\n  if (e.target.textContent === '◄') {\n    apiservice.decrementPage();\n\n    if (searchToSource === 'byTrend') {\n      response = await apiservice.fetchTrendFilms();\n    } else {\n      response = await apiservice.fetchFilmsByKeyWord();\n    }\n\n    const results = response.data.results;\n    movieContainer.innerHTML = renderMarkupSearch(results);\n    pagination(response.data.page, response.data.total_pages);\n    // window.scrollBy(0, -1000);\n    // window.scrollBy(0, -window.pageYOffset + 270);\n    window.scrollTo(0, 230);\n    return;\n  }\n\n  if (true) {\n    apiservice.page = Number(e.target.textContent);\n\n    if (searchToSource === 'byTrend') {\n      response = await apiservice.fetchTrendFilms();\n    } else {\n      response = await apiservice.fetchFilmsByKeyWord();\n    }\n\n    const results = response.data.results;\n    movieContainer.innerHTML = renderMarkupSearch(results);\n\n    pagination(response.data.page, response.data.total_pages);\n    // window.scrollBy(0, -1000);\n    // console.log(window.pageYOffset);\n    // window.scrollBy(0, -window.pageYOffset + 270);\n    window.scrollTo(0, 230);\n    return;\n  }\n}\n","import { renderMarkupSearch } from './markupSearch';\nimport { movieContainer, guard } from './refs';\nimport apiservice from './apiService';\nimport pagination from './pagination';\nimport { hideLoader, showLoader } from './loader';\nimport { observer } from './buttonTop';\n\n// const apiService = new ApiService();\ngetMovies();\n\nexport async function getMovies() {\n  try {\n    showLoader();\n    // apiservice.resetPage();\n    await apiservice.fetchGenres();\n    const response = await apiservice.fetchTrendFilms();\n    const results = response.data.results;\n    // console.log('results: ', results);\n    // alert(response.data.total_pages);\n    movieContainer.innerHTML = renderMarkupSearch(results);\n    observer.observe(guard);\n    hideLoader();\n\n    // console.log('response.data.total_pages01: ', response.data.total_pages);\n\n    pagination(1, response.data.total_pages);\n  } catch (err) {\n    console.log(err);\n  }\n}\n"],"names":["parcelRequire","$bpxeT","$03da642c15b09e5e$export$56525cbb1fcd885c","loader","document","querySelector","classList","remove","$03da642c15b09e5e$export$5cee2c2772922923","add","$dae789dcd4694041$export$60e1c8f5f122c5ac","$dae789dcd4694041$var$_getMovies","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","results","$dh4R1","default","fetchGenres","fetchTrendFilms","_ctx","sent","data","$4Nugj","movieContainer","innerHTML","$hnyF1","renderMarkupSearch","$3PzMA","observer","observe","guard","$dfaf77c789ce7a24$export$2e2bcd8739ae039","total_pages","console","log","t0","$dfaf77c789ce7a24$var$currentPage","$dfaf77c789ce7a24$var$paginationList","$dfaf77c789ce7a24$var$paginationBox","currentP","totalPages","$dfaf77c789ce7a24$var$_pagination","murkup","beforeTwoPage","beforePage","afterPage","afterTwoPage","concat","$dfaf77c789ce7a24$var$_clickFunction","e","searchToSource","results1","results2","target","tagName","textContent","localStorage","getItem","page","increamentPage","fetchFilmsByKeyWord","window","scrollTo","decrementPage","Number","addEventListener","removeEventListener","$b3ndh","onLibrPaginationClick","$46335106482ca9fe$var$_onHeaderFormClick","evt","keyWord","preventDefault","query","currentTarget","keyword","value","setItem","cleanHtml","paginationDiv","trim","buttonTop","style","display","errorText","body","setTimeout","headerForm","reset","length"],"version":3,"file":"index.f377a32d.js.map"}
{"mappings":"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","sources":["src/index.js","src/js/searchByKeyWord.js","src/js/loader.js","src/js/pagination.js","src/js/renderingGalleryMarkup.js","src/js/modal-movie.js"],"sourcesContent":["// import * as searchByKeyWord from './js/searchByKeyWord';\nimport { headerForm, errorSearch } from './js/refs';\nimport { onHeaderFormClick } from './js/searchByKeyWord';\nimport * as trailer from './js/trailer';\n\nheaderForm.addEventListener('submit', onHeaderFormClick);\n\nimport { oneToggle } from './js/modal-movie';\nimport { closeBtn } from './js/modal-movie';\nimport { keyPressEscCloseMovieModal } from './js/modal-movie';\nimport { clickBackdropCloseTeamModal } from './js/modal-movie';\nimport { renderMarkupModal } from './js/markupModal';\n// // тестую роботу ApiService:\nimport ApiService from './js/apiService';\n// import onChangeTheme from './js/theme-switch';\n\n// theme-switch.js\n\n// const apiservice = new ApiService();\n// //популярні:\n\n// // const service = new ApiService();\n// // // //популярні:\n\n// // service.fetchTrendFilms();\n// //жанри:\n// console.log(service.fetchGenres());\n\n// //по ключовому слову:\n// // service.query = 'cat';\n// service.fetchFilmsByKeyWord();\n\nimport { getMovies } from './js/renderingGalleryMarkup';\n\n/// ////////////footer-modal\nimport { openModalTeamBtn, closeModalTeamBtn, modalTeam } from './js/refs';\nimport {\n  toggleTeamModal,\n  toggleTeamModal,\n  clickBackdropCloseTeamModal,\n} from './js/team-modal';\n\nopenModalTeamBtn.addEventListener('click', toggleTeamModal);\ncloseModalTeamBtn.addEventListener('click', toggleTeamModal);\nmodalTeam.addEventListener('click', clickBackdropCloseTeamModal);\n//////////////// footer-modal\n\n// feature/modal-btns-library\nimport { onClick } from './js/modal-btns-library';\n\n// сетить жанри в локальне сховище\n// import './js/getGenres';\n\n// import { onBtnWatchedClick, onBtnQueueClick } from './js/libraryMarkup';\n// console.log('onBtnWatchedClick: ', onBtnWatchedClick);\n\n// import { closeBtn } from './js/modal-movie';\n// console.log('closeBtn: ', closeBtn);\n","import { headerForm, errorText } from './refs';\nimport apiservice from './apiService';\nimport { renderMarkupSearch } from './markupSearch';\nimport { cleanHtml } from './markupSearch';\nimport { hideLoader, showLoader } from './loader';\nimport pagination from './pagination';\nimport { movieContainer, sadEror, paginationDiv } from './refs';\nimport { getMovies } from './renderingGalleryMarkup';\n\n// const apiService = new ApiService();\n\nexport async function onHeaderFormClick(evt) {\n  try {\n    evt.preventDefault();\n    apiservice.query = evt.currentTarget.keyword.value;\n    const keyWord = evt.currentTarget.keyword.value;\n    // console.log('keyWord: ', keyWord);\n    localStorage.setItem('keyWord', keyWord);\n    cleanHtml();\n    apiservice.page = 1;\n\n    if (!apiservice.query.trim()) {\n      errorText.classList.remove('header__error_hidden');\n      sadEror.classList.remove('header__error_hidden');\n      paginationDiv.classList.add('visually-hidden');\n      setTimeout(() => {\n        errorText.classList.add('header__error_hidden');\n        sadEror.classList.add('header__error_hidden');\n        paginationDiv.classList.remove('visually-hidden');\n\n        getMovies();\n      }, 2500);\n      headerForm.reset();\n      return;\n    }\n\n    showLoader();\n    const response = await apiservice.fetchFilmsByKeyWord();\n    const results = response.data.results;\n    headerForm.reset();\n    hideLoader();\n\n    if (results.length === 0) {\n      errorText.classList.remove('header__error_hidden');\n      sadEror.classList.remove('header__error_hidden');\n      paginationDiv.classList.add('visually-hidden');\n      setTimeout(() => {\n        errorText.classList.add('header__error_hidden');\n        sadEror.classList.add('header__error_hidden');\n        paginationDiv.classList.remove('visually-hidden');\n\n        getMovies();\n      }, 2500);\n\n      headerForm.reset();\n    } else {\n      movieContainer.innerHTML = renderMarkupSearch(results);\n\n      pagination(1, response.data.total_pages);\n      hideLoader();\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n","export const showLoader = () => {\n  const loader = document.querySelector('.loader');\n  if (loader) {\n    loader.classList.remove('hidden');\n  }\n};\n\nexport const hideLoader = () => {\n  const loader = document.querySelector('.loader');\n  if (loader) {\n    loader.classList.add('hidden');\n  }\n};\n","import apiservice from './apiService';\nimport { renderMarkupSearch } from './markupSearch';\nimport { getMovies } from './renderingGalleryMarkup';\nimport { movieContainer } from './refs';\n\nconst paginationList = document.querySelector('.pagination__list'); //\nconst paginationBox = document.querySelector('.pagination');\npaginationBox.addEventListener('click', clickFunction);\n\n// const apiService = new ApiService();\n\nlet currentPage;\n\nexport default async function pagination(currentP, totalPages) {\n  currentPage = currentP;\n\n  let murkup = '';\n\n  let beforeTwoPage = currentPage - 2;\n  let beforePage = currentPage - 1;\n  let afterPage = currentPage + 1;\n  let afterTwoPage = currentPage + 2;\n\n  if (currentPage > 1) {\n    murkup += `<li class=\"pagination__item pagination__item_arrows\">◄</li> `;\n    murkup += `<li class=\"pagination__item\">1</li>`;\n  }\n\n  if (currentPage > 4) {\n    murkup += `<li class=\"pagination__item three-drops\">...</li>`;\n  }\n\n  if (currentPage > 3) {\n    murkup += `<li class=\"pagination__item\">${beforeTwoPage}</li>`;\n  }\n\n  if (currentPage > 2) {\n    murkup += `<li class=\"pagination__item\">${beforePage}</li>`;\n  }\n\n  murkup += `<li class=\"pagination__item current\">${currentPage}</li>`;\n\n  if (totalPages - 1 > currentPage) {\n    murkup += `<li class=\"pagination__item\">${afterPage}</li>`;\n  }\n\n  if (totalPages - 2 > currentPage) {\n    murkup += `<li class=\"pagination__item\">${afterTwoPage}</li>`;\n  }\n\n  if (totalPages - 3 > currentPage) {\n    murkup += `<li class=\"pagination__item three-drops\">...</li>`;\n  }\n  if (totalPages > currentPage) {\n    murkup += `<li class=\"pagination__item\">${totalPages}</li>`;\n    murkup += `<li class=\"pagination__item pagination__item_arrows\">►</li>`;\n  }\n  paginationList.innerHTML = murkup;\n}\n\nasync function clickFunction(e) {\n  let response;\n\n  if (e.target.tagName !== 'LI') {\n    return;\n  }\n  if (e.target.textContent === '...') {\n    return;\n  }\n\n  const searchToSource = localStorage.getItem('searchSource'); // , 'byTrend'  byKeyWord\n\n  if (e.target.textContent === '►') {\n    apiservice.page = currentPage;\n    apiservice.increamentPage();\n\n    if (searchToSource === 'byTrend') {\n      response = await apiservice.fetchTrendFilms();\n    } else {\n      response = await apiservice.fetchFilmsByKeyWord();\n    }\n    const results = response.data.results;\n\n    movieContainer.innerHTML = renderMarkupSearch(results);\n    pagination(response.data.page, response.data.total_pages);\n    window.scrollBy(0, -window.pageYOffset + 270);\n    // window.scrollBy(0, -1000);\n    return;\n  }\n\n  if (e.target.textContent === '◄') {\n    apiservice.decrementPage();\n\n    if (searchToSource === 'byTrend') {\n      response = await apiservice.fetchTrendFilms();\n    } else {\n      response = await apiservice.fetchFilmsByKeyWord();\n    }\n\n    const results = response.data.results;\n    movieContainer.innerHTML = renderMarkupSearch(results);\n    pagination(response.data.page, response.data.total_pages);\n    // window.scrollBy(0, -1000);\n    window.scrollBy(0, -window.pageYOffset + 270);\n    return;\n  }\n\n  if (true) {\n    apiservice.page = Number(e.target.textContent);\n\n    if (searchToSource === 'byTrend') {\n      response = await apiservice.fetchTrendFilms();\n    } else {\n      response = await apiservice.fetchFilmsByKeyWord();\n    }\n\n    const results = response.data.results;\n    movieContainer.innerHTML = renderMarkupSearch(results);\n    pagination(response.data.page, response.data.total_pages);\n    // window.scrollBy(0, -1000);\n    // console.log(window.pageYOffset);\n    window.scrollBy(0, -window.pageYOffset + 270);\n    return;\n  }\n}\n","import { renderMarkupSearch } from './markupSearch';\nimport { movieContainer } from './refs';\nimport apiservice from './apiService';\nimport pagination from './pagination';\nimport { hideLoader, showLoader } from './loader';\n\n// const apiService = new ApiService();\ngetMovies();\n\nexport async function getMovies() {\n  try {\n    showLoader();\n    // apiservice.resetPage();\n    await apiservice.fetchGenres();\n    const response = await apiservice.fetchTrendFilms();\n    const results = response.data.results;\n    // console.log('results: ', results);\n    // alert(response.data.total_pages);\n    movieContainer.innerHTML = renderMarkupSearch(results);\n    hideLoader();\n\n    // console.log('response.data.total_pages01: ', response.data.total_pages);\n\n    pagination(1, response.data.total_pages);\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import { clicksMovie } from './refs';\nimport { openModalMovie } from './refs';\nimport { closeModalMovieBtn } from './refs';\nimport { renderMarkupModal } from './markupModal';\nimport { modalGallery } from './refs';\nimport { cleanHtmlTrailer } from './trailer';\n// import { libraryListRender } from './libraryMarkup';\n\n// console.log(localMovie.data.results);\n\nclicksMovie.addEventListener('click', oneToggle);\ncloseModalMovieBtn.addEventListener('click', closeBtn);\nopenModalMovie.addEventListener('click', clickBackdropCloseTeamModal);\n\nexport function oneToggle(evt) {\n  /////////////////////////////////перевірка, якщо пустий список - модалка не відкривається\n  // console.log(evt.target);\n  // console.log(evt.target.classList);\n  if (!evt.target.closest('.movie__item')) {\n    return;\n  }\n\n  try {\n    // const sourceForModal = localStorage.getItem('sourceForModal');\n    // console.log('sourceForModal: ', sourceForModal);\n    // console.log('sourceForModal: ', sourceForModal);\n\n    openModalMovie.classList.toggle('is-hidden');\n    window.addEventListener('keydown', keyPressEscCloseMovieModal);\n    if (openModalMovie.classList.contains('is-hidden')) {\n      window.removeEventListener('keydown', keyPressEscCloseMovieModal);\n    }\n\n    let localArray;\n    /////////////////  вибір джерела даних залежно від того, де відкрита модалка\n\n    const localMovie = JSON.parse(localStorage.getItem('currentFilms'));\n    localArray = localMovie.data.results;\n    // console.log('localArray: ', localArray);\n\n    // if (sourceForModal === 'currentFilms') {\n    //   const localMovie = JSON.parse(localStorage.getItem('currentFilms'));\n    //   localArray = localMovie.data.results;\n\n    // } else if (sourceForModal === 'watchedFilms') {\n    //   const localMovie = JSON.parse(localStorage.getItem('watchedFilms'));\n    //   localArray = localMovie;\n    // }\n    // if (sourceForModal === 'queuedFilms') {\n    //   const localMovie = JSON.parse(localStorage.getItem('queuedFilms'));\n    //   localArray = localMovie;\n    // }\n\n    // console.log('localArray', localArray);\n\n    // const localMovie = JSON.parse(localStorage.getItem('currentFilms'));\n    // const localArray = localMovie.data.results;\n    //  console.log(localArray);\n    const li = evt.target.closest('.movie__item');\n    const liId = li.dataset.movie;\n    //  console.log(liId);\n\n    cleanHtml();\n    const arrId = localArray.find(arr => arr.id == liId);\n    //  console.log(arrId);\n    if (arrId == undefined) {\n      //  console.log(localArray);\n    } else\n      modalGallery.insertAdjacentHTML('beforeend', renderMarkupModal(arrId));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function clickBackdropCloseTeamModal(e) {\n  if (e.target === e.currentTarget) {\n    // libraryListRender();\n\n    cleanHtmlTrailer();\n\n    openModalMovie.classList.toggle('is-hidden');\n  }\n}\n\nexport function keyPressEscCloseMovieModal(evt) {\n  const ESC_KEY_CODE = `Escape`;\n\n  if (evt.code === ESC_KEY_CODE) {\n    // libraryListRender();\n\n    window.removeEventListener('keydown', keyPressEscCloseMovieModal);\n\n    cleanHtmlTrailer();\n\n    openModalMovie.classList.toggle('is-hidden');\n  }\n}\n\nexport function closeBtn() {\n  // openModalMovie.classList.toggle('is-hidden')\n  // libraryListRender(localArray);\n\n  cleanHtmlTrailer();\n\n  setTimeout(() => openModalMovie.classList.add('is-hidden'), 150);\n}\n\nexport function cleanHtml() {\n  modalGallery.innerHTML = '';\n}\n"],"names":["$krGWQ","parcelRequire","$bdfcdc80b4c38739$export$56525cbb1fcd885c","loader","document","querySelector","classList","remove","$bdfcdc80b4c38739$export$5cee2c2772922923","add","$l0vNa","async","$8dc511da3b87cb69$export$60e1c8f5f122c5ac","$iyB0E","default","fetchGenres","response","fetchTrendFilms","results","data","movieContainer","innerHTML","renderMarkupSearch","$1bab9c519cfa82bc$export$2e2bcd8739ae039","total_pages","err","console","log","$1bab9c519cfa82bc$var$paginationList","$1bab9c519cfa82bc$var$currentPage","currentP","totalPages","murkup","addEventListener","e","target","tagName","textContent","searchToSource","localStorage","getItem","page","increamentPage","fetchFilmsByKeyWord","window","scrollBy","pageYOffset","decrementPage","Number","$ddf1b7119a1bbad7$export$1adc870ebaa2167","evt","code","removeEventListener","$37v9V","cleanHtmlTrailer","openModalMovie","toggle","clicksMovie","closest","localArray","contains","localMovie","JSON","parse","liId","dataset","movie","modalGallery","arrId","find","arr","id","undefined","insertAdjacentHTML","$jwFHl","renderMarkupModal","closeModalMovieBtn","setTimeout","currentTarget","headerForm","preventDefault","query","keyword","value","keyWord","setItem","cleanHtml","trim","errorText","sadEror","paginationDiv","reset","length","openModalTeamBtn","$baGT8","toggleTeamModal","closeModalTeamBtn","modalTeam","clickBackdropCloseTeamModal"],"version":3,"file":"index.72cd9157.js.map"}